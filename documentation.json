{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3f7fdb3ad32fa6011e602d52fb60adff",
            "file": "projects/demo/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<h1 ds-text size=\"5xl\">Text 5XL</h1>\n<h1 ds-text size=\"4xl\">Text 4XL</h1>\n<h1 ds-text size=\"3xl\">Text 3XL</h1>\n<h1 ds-text size=\"2xl\">Text 2XL</h1>\n<h1 ds-text size=\"l\">Text L</h1>\n\n<p ds-text size=\"m\">Text M</p>\n<p ds-text size=\"s\">Text S</p>\n<p ds-text size=\"xs\">Text XS</p>\n\n<!-- <ds-text size=\"5xl\" type=\"heading\" label=\"Text 5XL\"></ds-text>\n<ds-text size=\"4xl\" type=\"heading\" label=\"Text 4XL\"></ds-text>\n<ds-text size=\"3xl\" type=\"heading\" label=\"Text 3XL\"></ds-text>\n<ds-text size=\"2xl\" type=\"heading\" label=\"Text 2XL\"></ds-text>\n<ds-text size=\"l\" type=\"heading\" label=\"Text L\"></ds-text>\n\n<ds-text type=\"heading\" label=\"Text Label\"></ds-text>\n<ds-text type=\"label\" label=\"Text Label\"></ds-text>\n<ds-text type=\"hint\" label=\"Text Label\"></ds-text> -->\n<!-- <button type=\"button\" ds-button size=\"small\">Primary Small</button>\n<hr />\n<button type=\"button\" ds-button>Primary Medium</button>\n<hr />\n<button type=\"button\" ds-button size=\"large\" disabled>Primary Large\n  Disabled</button>\n<hr />\n<button type=\"button\" ds-button variant=\"secondary\" size=\"small\">Secondary\n  Small</button>\n<hr />\n<button type=\"button\" ds-button variant=\"secondary\">Secondary Medium</button>\n<hr />\n<button type=\"button\" ds-button variant=\"secondary\" size=\"large\"\n  disabled>Secondary Large\n  Disabled</button>\n<hr />\n<button type=\"button\" ds-button variant=\"chevron\" size=\"small\">Chevron\n  Small</button>\n<hr />\n<button type=\"button\" ds-button variant=\"chevron\">Chevron Medium</button>\n<hr />\n<button type=\"button\" ds-button variant=\"chevron\" size=\"large\" disabled>Chevron\n  Large\n  Disabled</button>\n<hr />\n<button type=\"button\" ds-button variant=\"icon\" size=\"small\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"\n    viewBox=\"0 0 20 20\" fill=\"currentColor\">\n    <path fill-rule=\"evenodd\"\n      d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n      clip-rule=\"evenodd\" />\n  </svg>\n</button>\n<hr />\n<button type=\"button\" ds-button variant=\"icon\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"\n    viewBox=\"0 0 20 20\" fill=\"currentColor\">\n    <path fill-rule=\"evenodd\"\n      d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n      clip-rule=\"evenodd\" />\n  </svg>\n</button>\n<hr />\n<button type=\"button\" ds-button variant=\"icon\" size=\"large\" disabled>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\"\n    viewBox=\"0 0 20 20\" fill=\"currentColor\">\n    <path fill-rule=\"evenodd\"\n      d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n      clip-rule=\"evenodd\" />\n  </svg>\n</button>\n<hr /> -->"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8e76b2ed26e0ea31be116697341185b2",
            "file": "projects/ds/src/lib/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "\"small\" | \"medium\" | \"large\""
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"primary\" | \"secondary\" | \"chevron\" | \"icon\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_classNames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input\n} from '@angular/core';\n\nconst selector = 'ds-button';\n\nconst BUTTON_VARIANTS = ['primary', 'secondary', 'chevron', 'icon'] as const;\nconst BUTTON_SIZES = ['small', 'medium', 'large'] as const;\n\n@Component({\n  selector: `button[${selector}]`,\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonComponent {\n\n  @Input()\n  variant: 'primary' | 'secondary' | 'chevron' | 'icon' = 'primary';\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  private _classNames!: string;\n\n  @Input(selector)\n  @HostBinding('class')\n  public set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n\n    this.variant = BUTTON_VARIANTS.find(variant => this._classNames.includes(variant)) || 'primary';\n    this.size = BUTTON_SIZES.find(size => this._classNames.includes(size)) || 'medium';\n  }\n\n  public get classNames(): string {\n    return `${selector} ${selector}--${this.variant} ${selector}--${this.size}`;\n  }\n\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host.ds-button {\n  border-style: solid;\n  border-width: 1px;\n  position: relative;\n  cursor: pointer;\n  display: flex;\n  vertical-align: middle;\n  padding-top: var(--ds-space-2);\n  padding-bottom: var(--ds-space-2);\n  padding-left: var(--ds-space-7);\n  padding-right: var(--ds-space-7);\n  border-radius: var(--ds-border-radius-m);\n\n  &--primary {\n    background-color: var(--ds-color--ui-primary-colour);\n    border-color: transparent;\n    color: var(--ds-color--text-inverse-colour);\n\n    svg {\n      color: var(--ds-color--text-inverse-colour);\n    }\n\n    &:hover {\n      background-color: var(--ds-color-brand-primary-main);\n    }\n\n    &:active,\n    &:focus {\n      background-color: var(--ds-color-brand-primary-dark);\n    }\n\n    &:disabled {\n      background-color: var(--ds-color--ui-disabled-colour);\n      color: var(--ds-color--text-inverse-colour);\n    }\n  }\n\n  &--secondary {\n    background-color: var(--ds-color--text-inverse-colour);\n    border-color: var(--ds-color-brand-primary);\n    color: var(--ds-color-brand-primary);\n\n    svg {\n      color: var(--ds-color-brand-primary);\n    }\n\n    &:hover {\n      color: var(--ds-color--text-inverse-colour);\n      background-color: var(--ds-color-brand-primary-main);\n    }\n\n    &:active,\n    &:focus {\n      color: var(--ds-color--text-inverse-colour);\n      background-color: var(--ds-color-brand-primary-dark);\n    }\n\n    &:disabled {\n      background-color: var(--ds-color--ui-disabled-colour);\n      color: var(--ds-color--text-inverse-colour);\n    }\n  }\n\n  &--chevron {\n    background-color: transparent;\n    border-color: transparent;\n    color: var(--ds-color-brand-primary);\n\n    svg {\n      color: var(--ds-color-brand-primary);\n    }\n\n    &:hover {\n      color: var(--ds-color-brand-primary-main);\n    }\n\n    &:active,\n    &:focus {\n      color: var(--ds-color-brand-primary-dark);\n    }\n\n    &:disabled {\n      color: var(--ds-color--ui-disabled-colour);\n    }\n  }\n\n  &--icon {\n    background-color: var(--ds-color--ui-primary-colour);\n    border-color: transparent;\n    color: var(--ds-color--text-inverse-colour);\n    padding-top: var(--ds-space-3);\n    padding-bottom: var(--ds-space-3);\n    padding-left: var(--ds-space-3);\n    padding-right: var(--ds-space-3);\n  \n\n    svg {\n      color: var(--ds-color--text-inverse-colour);\n    }\n\n    &:hover {\n      background-color: var(--ds-color-brand-primary-main);\n    }\n\n    &:active,\n    &:focus {\n      background-color: var(--ds-color-brand-primary-dark);\n    }\n\n    &:disabled {\n      background-color: var(--ds-color--ui-disabled-colour);\n      color: var(--ds-color--text-inverse-colour);\n    }\n  }\n\n  &--small {\n    font-size: var(--ds-typography-scale-s);\n    padding-left: var(--ds-space-5);\n    padding-right: var(--ds-space-5);  \n  }\n\n  &--medium {\n    font-size: var(--ds-typography-scale-m);\n  }\n\n  &--large {\n    font-size: var(--ds-typography-scale-l);\n    padding-left: var(--ds-space-9);\n    padding-right: var(--ds-space-9);  \n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classNames": {
                    "name": "classNames",
                    "setSignature": {
                        "name": "classNames",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 31,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "classNames",
                        "type": "string",
                        "returnType": "string",
                        "line": 42
                    }
                }
            },
            "templateData": "<ng-content></ng-content>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-e65d98072c5380bcd724dd777c76c1bf",
            "file": "projects/ds/src/lib/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nconst selector = 'ds-checkbox';\n\n@Component({\n  selector: `input[checkbox][${selector}]`,\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>checkbox works!</p>\n"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-f0a7e9b2246d723cebbe0e32a95ba131",
            "file": "projects/ds/src/lib/text/text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"5xl\" | \"4xl\" | \"3xl\" | \"2xl\" | \"l\" | \"m\" | \"s\" | \"xs\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_classNames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input\n} from '@angular/core';\n\nconst selector = 'ds-text';\n\n@Component({\n  selector: `h1,h2,h3,h4,h5,p,label[${selector}]`,\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextComponent {\n  @Input() size: '5xl' | '4xl' | '3xl' | '2xl' | 'l' | 'm' | 's' | 'xs' = 'm';\n\n  private _classNames!: string;\n\n  @Input(selector)\n  @HostBinding('class')\n  public set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    this._classNames = value;\n  }\n\n  public get classNames(): string {\n    return `${selector} ${selector}--${this.size}`;\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host.ds-text {\n  &--l {\n    font-size: var(--ds-typography-scale-l);\n    font-weight: var(--ds-typography-weight-bold);\n    line-height: var(--ds-typography-line-height-125);\n  }\n\n  &--xl {\n    font-size: var(--ds-typography-scale-xl);\n    font-weight: var(--ds-typography-weight-bold);\n    line-height: var(--ds-typography-line-height-125);\n  }\n\n  &--2xl {\n    font-size: var(--ds-typography-scale-2xl);\n    font-weight: var(--ds-typography-weight-bold);\n    line-height: var(--ds-typography-line-height-125);\n  }\n\n\n  &--3xl {\n    font-size: var(--ds-typography-scale-3xl);\n    font-weight: var(--ds-typography-weight-bold);\n    line-height: var(--ds-typography-line-height-125);\n  }\n\n\n  &--4xl {\n    font-size: var(--ds-typography-scale-4xl);\n    font-weight: var(--ds-typography-weight-bold);\n    line-height: var(--ds-typography-line-height-125);\n  }\n\n\n  &--5xl {\n    font-size: var(--ds-typography-scale-5xl);\n    font-weight: var(--ds-typography-weight-bold);\n    line-height: var(--ds-typography-line-height-125);\n  }\n\n  &--m {\n    font-size: var(--ds-typography-scale-m);\n    line-height: var(--ds-typography-line-height-150);\n  }\n\n  &--s {\n    font-size: var(--ds-typography-scale-s);\n    line-height: var(--ds-typography-line-height-150);\n  }\n\n  &--xs {\n    font-size: var(--ds-typography-scale-xs);\n  }\n}\n",
                    "styleUrl": "./text.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classNames": {
                    "name": "classNames",
                    "setSignature": {
                        "name": "classNames",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "classNames",
                        "type": "string",
                        "returnType": "string",
                        "line": 30
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\n<!-- <ng-container [ngSwitch]=\"type\">\n  <h1 [ngClass]=\"classNames\" *ngSwitchCase=\"'heading'\">{{label}}</h1>\n  <label [ngClass]=\"classNames\" *ngSwitchCase=\"'label'\">{{label}}</label>\n  <p [ngClass]=\"classNames\" *ngSwitchDefault>{{label}}</p>\n</ng-container> -->"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-62be5ea24031217520ce700accd20f3e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// import { DsModule } from 'ds'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // DsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3c1d721cfd0753406a1cfde101c59380",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DsModule",
            "id": "module-DsModule-78a5f56cf3513a6cf44033a1f07dfdb0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ds/src/lib/ds.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ButtonComponent } from './button/button.component';\nimport { TextComponent } from './text/text.component';\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    TextComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ButtonComponent,\n    TextComponent\n  ]\n})\nexport class DsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "breakpoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['40em', '56em', '64em']"
            },
            {
                "name": "BUTTON_SIZES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['small', 'medium', 'large'] as const"
            },
            {
                "name": "BUTTON_VARIANTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['primary', 'secondary', 'chevron', 'icon'] as const"
            },
            {
                "name": "Chevron",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configureTests",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(configure: ConfigureFn, compilerOptions: CompilerOptions = {}) => {\n  const compilerConfig: CompilerOptions = {\n    preserveWhitespaces: false,\n    ...compilerOptions,\n  };\n\n  const configuredTestBed = TestBed.configureCompiler(compilerConfig);\n\n  configure(configuredTestBed);\n\n  return configuredTestBed.compileComponents().then(() => configuredTestBed);\n}"
            },
            {
                "name": "DUMMY_TEXT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'The quick brown fox jumps over the lazy dog'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "fonts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  body: '\"Helvetica Neue\", Roboto, sans-serif',\n  heading: '\"Roboto\", sans-serif',\n  monospace: 'Menlo, monospace',\n}"
            },
            {
                "name": "fontSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  '0.625rem',\n  '0.750rem',\n  '1.000rem',\n  '1.125rem',\n  '1.250rem',\n  '1.500rem',\n  '1.750rem',\n  '2.000rem',\n  '2.500rem',\n  '3.000rem',\n]"
            },
            {
                "name": "fontWeights",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  regular: 400,\n  medium: 500,\n  bold: 700,\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg width=\"15px\" height=\"15px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n<path fill-rule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clip-rule=\"evenodd\" />\n</svg>`"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconWithText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "letterSpacings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  default: 'normal',\n  tracked: '0.04em',\n}"
            },
            {
                "name": "lineHeights",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  solid: 1,\n  title: 1.25,\n  copy: 1.5,\n}"
            },
            {
                "name": "mock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "setup-jest.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  let storage: { [key: string]: string } = {};\n  return {\n    getItem: (key: string) => (key in storage ? storage[key] : null),\n    setItem: (key: string, value: string) => (storage[key] = value || ''),\n    removeItem: (key: string) => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
            },
            {
                "name": "Paragraph",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'ds-button'"
            },
            {
                "name": "selector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/checkbox/checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'ds-checkbox'"
            },
            {
                "name": "selector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/text/text.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'ds-text'"
            },
            {
                "name": "sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[8, 16, 32, 64, 128, 256, 512, 768, 1024, 1536]"
            },
            {
                "name": "space",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/docs/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[0, 4, 8, 16, 32, 64, 128, 256, 512]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <button ds-button variant=\"${args.variant}\" size=\"${args.size}\">\n        ${args.label}\n      </button>`,\n  }\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds/src/lib/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `<h1 ds-text size=\"${args.size}\">${args.text}</h1>`,\n  }\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "CompilerOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<literal type>",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 174
            },
            {
                "name": "ConfigureFn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 175
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ds/src/docs/theme.ts": [
                {
                    "name": "breakpoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['40em', '56em', '64em']"
                },
                {
                    "name": "fonts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  body: '\"Helvetica Neue\", Roboto, sans-serif',\n  heading: '\"Roboto\", sans-serif',\n  monospace: 'Menlo, monospace',\n}"
                },
                {
                    "name": "fontSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  '0.625rem',\n  '0.750rem',\n  '1.000rem',\n  '1.125rem',\n  '1.250rem',\n  '1.500rem',\n  '1.750rem',\n  '2.000rem',\n  '2.500rem',\n  '3.000rem',\n]"
                },
                {
                    "name": "fontWeights",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  regular: 400,\n  medium: 500,\n  bold: 700,\n}"
                },
                {
                    "name": "letterSpacings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  default: 'normal',\n  tracked: '0.04em',\n}"
                },
                {
                    "name": "lineHeights",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  solid: 1,\n  title: 1.25,\n  copy: 1.5,\n}"
                },
                {
                    "name": "sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[8, 16, 32, 64, 128, 256, 512, 768, 1024, 1536]"
                },
                {
                    "name": "space",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/docs/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[0, 4, 8, 16, 32, 64, 128, 256, 512]"
                }
            ],
            "projects/ds/src/lib/button/button.component.ts": [
                {
                    "name": "BUTTON_SIZES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['small', 'medium', 'large'] as const"
                },
                {
                    "name": "BUTTON_VARIANTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['primary', 'secondary', 'chevron', 'icon'] as const"
                },
                {
                    "name": "selector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'ds-button'"
                }
            ],
            "projects/ds/src/lib/button/button.stories.ts": [
                {
                    "name": "Chevron",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg width=\"15px\" height=\"15px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n<path fill-rule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clip-rule=\"evenodd\" />\n</svg>`"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "IconWithText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <button ds-button variant=\"${args.variant}\" size=\"${args.size}\">\n        ${args.label}\n      </button>`,\n  }\n}"
                }
            ],
            "test-config.helper.ts": [
                {
                    "name": "configureTests",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(configure: ConfigureFn, compilerOptions: CompilerOptions = {}) => {\n  const compilerConfig: CompilerOptions = {\n    preserveWhitespaces: false,\n    ...compilerOptions,\n  };\n\n  const configuredTestBed = TestBed.configureCompiler(compilerConfig);\n\n  configure(configuredTestBed);\n\n  return configuredTestBed.compileComponents().then(() => configuredTestBed);\n}"
                }
            ],
            "projects/ds/src/lib/text/text.stories.ts": [
                {
                    "name": "DUMMY_TEXT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'The quick brown fox jumps over the lazy dog'"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Paragraph",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `<h1 ds-text size=\"${args.size}\">${args.text}</h1>`,\n  }\n}"
                }
            ],
            "projects/demo/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/demo/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "setup-jest.ts": [
                {
                    "name": "mock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "setup-jest.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  let storage: { [key: string]: string } = {};\n  return {\n    getItem: (key: string) => (key in storage ? storage[key] : null),\n    setItem: (key: string, value: string) => (storage[key] = value || ''),\n    removeItem: (key: string) => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
                }
            ],
            "projects/ds/src/lib/checkbox/checkbox.component.ts": [
                {
                    "name": "selector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/checkbox/checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'ds-checkbox'"
                }
            ],
            "projects/ds/src/lib/text/text.component.ts": [
                {
                    "name": "selector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds/src/lib/text/text.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'ds-text'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "test-config.helper.ts": [
                {
                    "name": "CompilerOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<literal type>",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 174
                },
                {
                    "name": "ConfigureFn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 175
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/demo/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/demo/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breakpoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fonts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fontSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fontWeights",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "letterSpacings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lineHeights",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/docs/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "space",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUTTON_SIZES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUTTON_VARIANTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Chevron",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconWithText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/checkbox/checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/text/text.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TEXT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paragraph",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds/src/lib/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "setup-jest.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test-config.helper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configureTests",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}